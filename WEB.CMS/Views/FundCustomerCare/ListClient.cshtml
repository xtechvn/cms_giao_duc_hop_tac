@using Utilities
@using Entities.ViewModels
@using Entities.ViewModels.CustomerManager
@model GenericViewModel<ClientCustomerCareFundModel>
@{ 
    Layout = null;
}
@if (Model == null)
{
    <div class="search-null center mb40">
        <div class="mb24">
            <img src="/images/graphics/icon-search.png" alt="">
        </div>
        <h2 class="title txt_24">Không tìm thấy kết quả</h2>
        <div class="gray">Chúng tôi không tìm thấy thông tin mà bạn cần, vui lòng thử lại</div>
    </div>
}
else
{
    <div class="wrap_bg wrap_bg_no-padding mb20">
        <div class="table-responsive table-default table-gray wrap_bg wrap_bg_no-padding">
            <table class="table table-nowrap">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Mã khách hàng</th>
                        <th>Tên khách hàng</th>
                        <th>Tổng quỹ</th>
                    </tr>
                </thead>

                <tbody>

                    @if (Model.ListData != null && Model.ListData.Count > 0)
                    {

                        var STT = (Model.CurrentPage - 1) * Model.PageSize;
                        @foreach (var item in Model.ListData)
                        {
                            STT++;
                            <tr>
                                <td>@STT</td>
                                <td>
                                    <a class="blue" href="/CustomerManager/Detail/@item.ClientId">@(item.ClientCode != "" ? item.ClientCode : item.ClientId.ToString())</a>

                                </td>
                                <td> <a class="blue" href="/CustomerManager/Detail/@item.ClientId">@item.ClientName</a>
                                    <div>@item.Phone</div>
                                    <div>@item.Email</div>
                                </td>
                                <td>
                                    @item.TotalFundCustomerCare.ToString("N0")
                                </td>
                          

                            </tr>
                        }

                    }
                </tbody>
            </table>
        </div>
        <style>
            .status-grey {
                font-size: 12px;
                background: #40424452;
                color: #fff;
                padding: 2px 10px;
                border-radius: 5px;
            }
        </style>

        <input id="countClient" value="@Model.TotalRecord" style="display:none" />
        @await Component.InvokeAsync("PagingNew", new
            {

                pageModel = new Paging()
    {
        TotalRecord = Model.TotalRecord,
        TotalPage = Model.TotalPage,
        CurrentPage = Model.CurrentPage,
        PageSize = Model.PageSize,
        RecordName = "Khách hàng",
        PageAction = "_fund_customer_care.ClientOnPaging({0})",
        PageSelectPageSize = "_fund_customer_care.onSelectPageSize()"
    }
            })
    </div>
}